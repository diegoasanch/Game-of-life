{"version":3,"sources":["styles/colors.ts","context/theme.ts","components/SizeInput/SizeInput.tsx","components/SpeedInput/SpeedInput.tsx","components/Sidebar/Sidebar.tsx","context/game.ts","components/Cell/Cell.tsx","components/CellGrid/CellGrid.tsx","pages/Game/gameFunctions.ts","pages/Game/Game.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["dark","background","text","sidebar","cellBorder","cellAlive","cellDead","header","scrollBarBg","scrollBarThumb","light","CurrentTheme","createContext","SizeInput","value","maxValue","placeholder","handleInput","allowNumericCharactersOnly","min","max","onValueChange","SpeedInput","setValue","onChange","labelStepSize","Container","styled","div","props","theme","Stats","footer","Count","span","StyledHeader","H1","HeaderContainer","StyledDivider","Divider","Settings","StyledSwitch","Switch","SectionHeader","H3","InlineIcon","Icon","TooltipContent","Shoutout","H6","HeaderTooltip","className","packageJson","version","Sidebar","rows","cols","setRows","setCols","iterateOnce","speed","setSpeed","isPlaying","togglePlaying","resetBoard","iterationCount","isDark","toggleTheme","useContext","content","position","Position","RIGHT","icon","intent","alignIndicator","Alignment","checked","innerLabel","innerLabelChecked","large","TOP","onClick","rightIcon","event","disabled","href","target","rel","ToggleCellState","col","row","console","log","StyledCell","alive","Cell","cellData","toggleCell","column","Row","CellGrid","length","map","index","cell","aliveNextCycle","board","ROWS","COLS","current","UP","DOWN","LEFT","HAS_RIGHT","HAS_DOWN","HAS_UP","HAS_LEFT","alive_neighbors","Number","deep_copy","to_copy","JSON","parse","stringify","heartPattern","createBoard","random","is_alive","heart","array","i","j","Math","round","push","age","PageContainer","SideContainer","MainContainer","Game","useState","colCount","setColCount","rowCount","setRowCount","setContent","setIsPlaying","setIterationCount","Array","isArray","new_state","current_cell","copied_data","nextCycle","prev","initializeBoard","useEffect","useInterval","Provider","copiedContent","valueAsNumber","valueAsString","innputElement","old","FocusStyleManager","onlyShowFocusOnTabs","Page","App","setIsDark","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAEaA,EAAe,CACxBC,WAAY,UACZC,KAAM,UACNC,QAAS,UACTC,WAAY,UACZC,UAAW,UACXC,SAAU,UACVC,OAAQ,UACRC,YAAa,UACbC,eAAgB,WAEPC,EAAgB,CACzBT,WAAY,UACZC,KAAM,UACNC,QAAS,UACTC,WAAY,UACZC,UAAW,UACXC,SAAU,UACVC,OAAQ,UACRC,YAAa,UACbC,eAAgB,QCnBPE,EAAeC,wBAAcZ,G,wBCsB3Ba,EAdG,SAAC,GAA2D,IAAzDC,EAAwD,EAAxDA,MAAOC,EAAiD,EAAjDA,SAAUC,EAAuC,EAAvCA,YAAaC,EAA0B,EAA1BA,YAE/C,OACI,cAAC,IAAD,CACIC,4BAA4B,EAC5BC,IAAK,EACLC,IAAKL,EACLM,cAAeJ,EACfD,YAAaA,EACbF,MAAOA,K,yBCEJQ,EAZI,SAAC,GAAiC,IAA/BR,EAA8B,EAA9BA,MAAOS,EAAuB,EAAvBA,SACzB,OACI,cAAC,IAAD,CACIT,MAAOA,EACPU,SAAUD,EACVH,IAAK,GACLK,cAAe,EACfN,IAAK,K,QCLXO,EAAYC,IAAOC,IAAV,iOAKS,SAAAC,GAAK,OAAIA,EAAMC,MAAM3B,WAKvC4B,EAAQJ,IAAOK,OAAV,gSAiBLC,EAAQN,IAAOO,KAAV,4CACElC,EAAKO,QAEZ4B,EAAeR,YAAOS,IAAPT,CAAH,oJAMZU,EAAkBV,IAAOpB,OAAV,uEAIf+B,EAAgBX,YAAOY,IAAPZ,CAAH,8CAGba,EAAWb,IAAOC,IAAV,iiBAac,SAAAC,GAAK,OAAIA,EAAMC,MAAMtB,eAKrB,SAAAqB,GAAK,OAAIA,EAAMC,MAAMrB,kBAS3CgC,EAAed,YAAOe,IAAPf,CAAH,oFAKZgB,EAAgBhB,YAAOiB,IAAPjB,CAAH,8DAGbkB,EAAalB,YAAOmB,IAAPnB,CAAH,4GAKVoB,EAAiBpB,IAAOC,IAAV,gHAMdoB,EAAWrB,YAAOsB,IAAPtB,CAAH,sHAwBRuB,EACF,eAACH,EAAD,WACI,wDAA0B,uBAAMI,UAAU,iBAAhB,sBAA2CC,EAAYC,cACjF,6CACgB,wDADhB,yLAKU,uBALV,mHAUA,uCACA,+BACI,mHACA,kHACA,mHACA,oIA+IGC,EA1IC,SAAC,GAcF,IAbXC,EAaU,EAbVA,KACAC,EAYU,EAZVA,KACAC,EAWU,EAXVA,QACAC,EAUU,EAVVA,QACAC,EASU,EATVA,YACAC,EAQU,EARVA,MACAC,EAOU,EAPVA,SACAC,EAMU,EANVA,UACAC,EAKU,EALVA,cACAC,EAIU,EAJVA,WACAC,EAGU,EAHVA,eACAC,EAEU,EAFVA,OACAC,EACU,EADVA,YAGMrC,EAAQsC,qBAAWzD,GAOzB,OACI,eAACe,EAAD,CAAWI,MAAOA,EAAlB,UAEI,eAACO,EAAD,WACI,cAAC,IAAD,CAAUgC,QAASnB,EAAeoB,SAAUC,IAASC,MAArD,SACI,eAACrC,EAAD,mBACS,uBADT,MAEO,uBAFP,OAII,cAACU,EAAD,CAAY4B,KAAK,YAAYC,OAAO,iBAG5C,cAACjC,EAAD,CACIkC,eAAgBC,IAAUJ,MAC1BK,QAASX,EACT1C,SAAU2C,EACVW,WAAW,eACXC,kBAAkB,eAClBC,OAAK,OAIb,cAAC1C,EAAD,IAEA,eAACE,EAAD,CAAUV,MAAOA,EAAjB,UAGI,cAACa,EAAD,uBACA,eAAC,IAAD,qBAEI,cAAC,EAAD,CACI7B,MAAO0C,EACPzC,SAAU,IACVC,YAAY,eACZC,YAAayC,OAGrB,eAAC,IAAD,kBAEI,cAAC,EAAD,CACI5C,MAAOyC,EACPxC,SAAU,IACVC,YAAY,YACZC,YAAawC,OAGrB,eAAC,IAAD,6BAEI,sBAAMN,UAAU,iBAAhB,mBACA,cAAC,EAAD,CACIrC,MAAO8C,EACPrC,SAAUsC,OAIlB,eAAC,IAAD,CAAamB,OAAK,EAAlB,UACI,cAAC,IAAD,CAAUX,QAAO,UAAKP,EAAY,OAAQ,QAAzB,cAA8CQ,SAAUC,IAASU,IAAlF,SACI,cAAC,IAAD,CACI/E,KAAM4D,EAAY,QAAU,OAC5BW,KAAMX,EAAY,QAAU,OAC5BY,OAAO,UACPQ,QAASnB,MAGjB,cAAC,IAAD,CAAUM,QAAQ,eAAeC,SAAUC,IAASU,IAApD,SACI,cAAC,IAAD,CACIE,UAAU,eACVD,QAxEJ,SAACE,GACjBzB,KAwEoB0B,SAAUvB,SAKtB,eAAC,IAAD,WACI,cAAC,IAAD,CAAUO,QAAQ,cAAcC,SAAUC,IAASU,IAAnD,SACI,cAAC,IAAD,CACIC,QAAS,kBAAMlB,GAAW,GAAO,IACjCS,KAAK,QACLC,OAAO,aAGf,cAAC,IAAD,CAAUL,QAAQ,cAAcC,SAAUC,IAASU,IAAnD,SACI,cAAC,IAAD,CACIC,QAAS,kBAAMlB,GAAW,GAAO,IACjCS,KAAK,aAGb,cAAC,IAAD,CAAUJ,QAAQ,kBAAkBC,SAAUC,IAASU,IAAvD,SACI,cAAC,IAAD,CACI/E,KAAK,SACLgF,QAAS,kBAAMlB,GAAW,GAAM,IAChCS,KAAK,mBAOrB,eAAC1C,EAAD,WACI,cAACO,EAAD,CAAea,UAAU,YAGzB,eAAC,IAAD,+BAAqB,cAAClB,EAAD,UAAQgC,OAC7B,eAACjB,EAAD,CAAUG,UAAU,iBAApB,2CAEI,mBAAGmC,KAAK,iCAAiCC,OAAO,SAASC,IAAI,sBAA7D,8B,SClRPC,GAAkB7E,yBAAc,SAAC8E,EAAaC,GAAiBC,QAAQC,IAAI,yBCKlFC,GAAanE,IAAOC,IAAV,yHAGQ,SAAAC,GAAK,OAAIA,EAAMkE,MAAQlE,EAAMC,MAAMzB,UAAYwB,EAAMC,MAAMxB,YAC3D,SAAAuB,GAAK,OAAIA,EAAMC,MAAM1B,cAwB9B4F,GAjBF,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SACNC,EAAa9B,qBAAWqB,IACxB3D,EAAQsC,qBAAWzD,GAMzB,OACI,cAACmF,GAAD,6BACQG,GADR,IAEIf,QAPY,WAChBgB,EAAWD,EAASE,OAAQF,EAASN,MAOjC7D,MAAOA,MCtBbJ,GAAYC,IAAOC,IAAV,qZAWa,SAAAC,GAAK,OAAIA,EAAMC,MAAMtB,eAKrB,SAAAqB,GAAK,OAAIA,EAAMC,MAAMrB,kBAG3C2F,GAAMzE,IAAOC,IAAV,0FAmCMyE,GAzBE,SAAC,GAAsB,IAApB9C,EAAmB,EAAnBA,KACVzB,EAAQsC,qBAAWzD,GAEzB,OACI,cAAC,GAAD,CAAWmB,MAAOA,EAAlB,UACW,OAAJyB,QAAI,IAAJA,OAAA,EAAAA,EAAM+C,SAAU/C,EAAK,GAAG+C,OACjB/C,EAAKgD,KAAI,SAACZ,EAAKa,GAAN,OACP,cAACJ,GAAD,UACMT,EAAIY,KAAK,SAAAE,GAAI,OACX,cAAC,GAAD,CAEIR,SAAUQ,GAFd,eACiBA,EAAKd,IADtB,YAC6Bc,EAAKN,aAH1C,cAAiBK,OAYzB,cAAC,IAAD,8D,UCtDHE,GAAiB,SAACC,EAAkBhB,EAAaD,GAC1D,IAAMkB,EAAOD,EAAML,OACbO,EAAOF,EAAM,GAAGL,OAChBQ,EAAUH,EAAMhB,GAAKD,GAErBqB,EAAKpB,EAAM,EACXqB,EAAOrB,EAAM,EACbsB,EAAOvB,EAAM,EACblB,EAAQkB,EAAM,EAEdwB,EAAY1C,EAAQqC,EACpBM,EAAWH,EAAOJ,EAClBQ,EAASL,GAAM,EACfM,EAAWJ,GAAQ,EAWnBK,GATYD,GAAYD,EAAUG,OAAOZ,EAAMI,GAAIE,GAAMlB,OAAS,IACrDqB,EAASG,OAAOZ,EAAMI,GAAIrB,GAAKK,OAAS,IACxCmB,GAAaE,EAAUG,OAAOZ,EAAMI,GAAIvC,GAAOuB,OAAS,IACvDsB,EAAWE,OAAOZ,EAAMhB,GAAKsB,GAAMlB,OAAS,IAC3CmB,EAAYK,OAAOZ,EAAMhB,GAAKnB,GAAOuB,OAAS,IAC9CsB,GAAYF,EAAYI,OAAOZ,EAAMK,GAAMC,GAAMlB,OAAS,IACzDoB,EAAWI,OAAOZ,EAAMK,GAAMtB,GAAKK,OAAS,IAC5CoB,GAAYD,EAAaK,OAAOZ,EAAMK,GAAMxC,GAAOuB,OAAS,GAGlF,OAA4B,IAApBuB,GAA2BR,EAAQf,OAA6B,IAApBuB,GA8B3CE,GAAY,SAACC,GACtB,OAAOC,KAAKC,MAAMD,KAAKE,UAAUH,KAI/BI,GAA2B,CAC7B,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAC/E,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAC/E,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAC/E,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAC/E,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAC/E,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAC/E,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAC/E,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAC/E,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAC/E,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAC/E,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAC/E,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAC/E,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAC/E,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAC/E,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAC/E,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAC/E,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAC/E,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAC/E,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAC/E,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAC/E,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAC/E,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAC/E,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAC/E,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAC/E,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,E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","file":"static/js/main.a39b2910.chunk.js","sourcesContent":[" import { Itheme } from '../types/styles'\r\n\r\nexport const dark: Itheme = {\r\n    background: '#2F3437',\r\n    text: '#EBEBEB',\r\n    sidebar: '#151515',\r\n    cellBorder: '#000000',\r\n    cellAlive: '#0E0F1E',\r\n    cellDead: '#586268',\r\n    header: '#19A6FF',\r\n    scrollBarBg: '#2F3437',\r\n    scrollBarThumb: '#151515',\r\n}\r\nexport const light: Itheme = {\r\n    background: '#EBEBEB',\r\n    text: '#37352F',\r\n    sidebar: '#FFFFFF',\r\n    cellBorder: '#343434',\r\n    cellAlive: '#0E0F10',\r\n    cellDead: '#EEEEEE',\r\n    header: '#19A6FF',\r\n    scrollBarBg: '#EBEBEB',\r\n    scrollBarThumb: '#888',\r\n}\r\n","import { createContext } from 'react'\r\nimport { dark } from '../styles/colors'\r\n\r\nexport const CurrentTheme = createContext(dark)\r\n","import React from 'react'\r\nimport {  NumericInput } from \"@blueprintjs/core\";\r\nimport { numInputCallback } from '../../types/inputs'\r\n\r\ninterface Iprops {\r\n    value: number,\r\n    maxValue: number | undefined,\r\n    placeholder: string,\r\n    handleInput: numInputCallback,\r\n}\r\n\r\nconst SizeInput = ({ value, maxValue, placeholder, handleInput }: Iprops) => {\r\n\r\n    return (\r\n        <NumericInput\r\n            allowNumericCharactersOnly={false}\r\n            min={0}\r\n            max={maxValue}\r\n            onValueChange={handleInput}\r\n            placeholder={placeholder}\r\n            value={value}\r\n        />\r\n    )\r\n}\r\n\r\nexport default SizeInput\r\n","import React from 'react'\r\nimport { Slider } from \"@blueprintjs/core\";\r\nimport { SetNumValue } from '../../types/inputs'\r\n\r\ninterface Iprops {\r\n    value: number,\r\n    setValue: SetNumValue,\r\n}\r\n\r\n\r\nconst SpeedInput = ({ value, setValue }: Iprops) => {\r\n    return (\r\n        <Slider\r\n            value={value}\r\n            onChange={setValue}\r\n            max={30}\r\n            labelStepSize={4}\r\n            min={1}\r\n        />\r\n    )\r\n}\r\n\r\nexport default SpeedInput\r\n","import React, { useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport { dark } from '../../styles/colors'\r\nimport SizeInput from '../SizeInput'\r\nimport { Label, Button, ButtonGroup, Position, H1, H3, H4, Divider, Switch, Alignment, Icon, H6 } from \"@blueprintjs/core\";\r\nimport { Tooltip2 } from \"@blueprintjs/popover2\";\r\nimport { numInputCallback, SetNumValue } from '../../types/inputs'\r\nimport SpeedInput from '../SpeedInput'\r\nimport { CurrentTheme } from '../../context/theme'\r\nimport { IthemeProp } from '../../types/styles'\r\nimport packageJson from '../../../package.json';\r\n\r\nconst Container = styled.div<IthemeProp>`\r\n    position: relative;\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: ${props => props.theme.sidebar};\r\n    padding: 8px;\r\n    align-items: center;\r\n    justify-content: stretch;\r\n`\r\nconst Stats = styled.footer`\r\n    position: absolute;\r\n    bottom: 5px;\r\n    left: 10px;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    justify-self: end;\r\n    margin-top: 10px;\r\n    width: 90%;\r\n\r\n    .divider {\r\n        margin-bottom: 10px;\r\n    }\r\n`\r\n\r\nconst Count = styled.span`\r\n    color: ${dark.header};\r\n`\r\nconst StyledHeader = styled(H1)`\r\n    font-size: 4em !important;\r\n    line-height: .9em !important;\r\n    font-weight: bold;\r\n    align-self: flex-start;\r\n`\r\nconst HeaderContainer = styled.header`\r\n    position: relative;\r\n    width: 100%;\r\n`\r\nconst StyledDivider = styled(Divider)`\r\n    width: 100%;\r\n`\r\nconst Settings = styled.div<IthemeProp>`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    overflow-y: scroll;\r\n    width: 100%;\r\n    margin-right: 5px;\r\n\r\n    > * {\r\n        margin: .5em 0;\r\n    }\r\n    &::-webkit-scrollbar {\r\n        display: none;\r\n        background-color: ${props => props.theme.scrollBarBg};\r\n        width: 5px;\r\n        height: 5px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        background-color: ${props => props.theme.scrollBarThumb};\r\n    }\r\n    &:hover {\r\n        margin-right: 0;\r\n        &::-webkit-scrollbar {\r\n            display: contents;\r\n        }\r\n    }\r\n`\r\nconst StyledSwitch = styled(Switch)`\r\n    position: absolute;\r\n    bottom: 0;\r\n    right: 0;\r\n`\r\nconst SectionHeader = styled(H3)`\r\n    align-self: flex-flex-start;\r\n`\r\nconst InlineIcon = styled(Icon)`\r\n    display: inline-block;\r\n    vertical-align: super;\r\n    margin-left: .2em;\r\n`\r\nconst TooltipContent = styled.div`\r\n    width: 40vw;\r\n    max-width: 1000px;\r\n    min-width: 500px;\r\n    padding: 1em;\r\n`\r\nconst Shoutout = styled(H6)`\r\n    font-size: .9em !important;\r\n\r\n    a &:not(:hover) {\r\n        color: inherit;\r\n    }\r\n`\r\n\r\ninterface Iprops {\r\n    rows: number,\r\n    cols: number,\r\n    setRows: numInputCallback,\r\n    setCols: numInputCallback,\r\n    speed: number,\r\n    setSpeed: SetNumValue,\r\n    isPlaying: boolean,\r\n    iterationCount: number,\r\n    iterateOnce: () => void,\r\n    resetBoard: (random: boolean | undefined, heart: boolean | undefined) => void,\r\n    togglePlaying: () => void,\r\n    readonly isDark: boolean,\r\n    toggleTheme: () => void,\r\n}\r\n\r\nconst HeaderTooltip = (\r\n    <TooltipContent>\r\n        <h1>Conway's Game of Life <span className=\"bp3-text-muted\">&emsp;- v{packageJson.version}</span></h1>\r\n        <p>\r\n            &emsp; Is a <strong>cellular automaton</strong> devised by the\r\n            British mathematician John\r\n            Horton Conway in 1970. It is a zero-player game, meaning that its\r\n            evolution is determined by its initial state, requiring no further\r\n            input.<br/>\r\n            &emsp; One interacts with the Game of Life by creating an initial\r\n            configuration and observing how it evolves.\r\n\r\n        </p>\r\n        <h2>Rules</h2>\r\n        <ul>\r\n            <li>Any live cell with fewer than two live neighbours dies, as if by underpopulation.</li>\r\n            <li>Any live cell with two or three live neighbours lives on to the next generation.</li>\r\n            <li>Any live cell with more than three live neighbours dies, as if by overpopulation.</li>\r\n            <li>Any dead cell with exactly three live neighbours becomes a live cell, as if by reproduction.</li>\r\n        </ul>\r\n    </TooltipContent>\r\n)\r\n\r\nconst Sidebar = ({\r\n    rows,\r\n    cols,\r\n    setRows,\r\n    setCols,\r\n    iterateOnce,\r\n    speed,\r\n    setSpeed,\r\n    isPlaying,\r\n    togglePlaying,\r\n    resetBoard,\r\n    iterationCount,\r\n    isDark,\r\n    toggleTheme,\r\n}: Iprops) => {\r\n\r\n    const theme = useContext(CurrentTheme)\r\n\r\n    const handleClick = (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\r\n        iterateOnce()\r\n    }\r\n\r\n\r\n    return (\r\n        <Container theme={theme}>\r\n\r\n            <HeaderContainer>\r\n                <Tooltip2 content={HeaderTooltip} position={Position.RIGHT}>\r\n                    <StyledHeader>\r\n                        Game <br/>\r\n                        of <br/>\r\n                        Life\r\n                        <InlineIcon icon=\"info-sign\" intent=\"primary\"/>\r\n                    </StyledHeader>\r\n                </Tooltip2>\r\n                <StyledSwitch\r\n                    alignIndicator={Alignment.RIGHT}\r\n                    checked={isDark}\r\n                    onChange={toggleTheme}\r\n                    innerLabel=\"🌞\"\r\n                    innerLabelChecked=\"🌚\"\r\n                    large\r\n                />\r\n            </HeaderContainer>\r\n\r\n            <StyledDivider />\r\n\r\n            <Settings theme={theme}>\r\n\r\n\r\n                <SectionHeader>Settings</SectionHeader>\r\n                <Label>\r\n                    Columns\r\n                    <SizeInput\r\n                        value={cols}\r\n                        maxValue={250}\r\n                        placeholder=\"Column count\"\r\n                        handleInput={setCols}\r\n                    />\r\n                </Label>\r\n                <Label>\r\n                    Rows\r\n                    <SizeInput\r\n                        value={rows}\r\n                        maxValue={250}\r\n                        placeholder=\"Row count\"\r\n                        handleInput={setRows}\r\n                    />\r\n                </Label>\r\n                <Label>\r\n                    Iteration Speed\r\n                    <span className=\"bp3-text-muted\"> (Hz)</span>\r\n                    <SpeedInput\r\n                        value={speed}\r\n                        setValue={setSpeed}\r\n                    />\r\n                </Label>\r\n\r\n                <ButtonGroup large>\r\n                    <Tooltip2 content={`${isPlaying ? 'Stop': 'Start'} iterating`} position={Position.TOP}>\r\n                        <Button\r\n                            text={isPlaying ? \"Pause\" : \"Play\"}\r\n                            icon={isPlaying ? \"pause\" : \"play\"}\r\n                            intent=\"primary\"\r\n                            onClick={togglePlaying}\r\n                        />\r\n                    </Tooltip2>\r\n                    <Tooltip2 content=\"Step-by-step\" position={Position.TOP}>\r\n                        <Button\r\n                            rightIcon=\"step-forward\"\r\n                            onClick={handleClick}\r\n                            disabled={isPlaying}\r\n                        />\r\n                    </Tooltip2>\r\n\r\n                </ButtonGroup>\r\n                <ButtonGroup>\r\n                    <Tooltip2 content=\"Reset board\" position={Position.TOP}>\r\n                        <Button\r\n                            onClick={() => resetBoard(false, true)}\r\n                            icon=\"reset\"\r\n                            intent=\"danger\"\r\n                        />\r\n                    </Tooltip2>\r\n                    <Tooltip2 content=\"Clear board\" position={Position.TOP}>\r\n                        <Button\r\n                            onClick={() => resetBoard(false, false)}\r\n                            icon=\"eraser\"\r\n                        />\r\n                    </Tooltip2>\r\n                    <Tooltip2 content=\"Randomize cells\" position={Position.TOP}>\r\n                        <Button\r\n                            text=\"Random\"\r\n                            onClick={() => resetBoard(true, false)}\r\n                            icon=\"random\"\r\n                        />\r\n                    </Tooltip2>\r\n                </ButtonGroup>\r\n            </Settings>\r\n\r\n\r\n            <Stats>\r\n                <StyledDivider className=\"divider\" />\r\n                {/* <SectionHeader>Info</SectionHeader> */}\r\n\r\n                <H4>Iteration count: <Count>{iterationCount}</Count></H4>\r\n                <Shoutout className=\"bp3-text-muted\">\r\n                    Made with 💖 by &nbsp;\r\n                    <a href=\"https://github.com/diegoasanch\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        Diego.\r\n                    </a>\r\n                </Shoutout>\r\n\r\n            </Stats>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import { createContext } from 'react'\r\n\r\nexport const ToggleCellState = createContext((col: number, row: number) => {console.log('Not yet configured')})\r\n","import React, { useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport { cellContent } from '../../types/cells'\r\nimport { ToggleCellState } from '../../context/game'\r\nimport { CurrentTheme } from '../../context/theme'\r\nimport { IthemeProp } from '../../types/styles'\r\n\r\nconst StyledCell = styled.div<cellContent & IthemeProp>`\r\n    height: 20px;\r\n    width: 20px;\r\n    background-color: ${props => props.alive ? props.theme.cellAlive : props.theme.cellDead};\r\n    border: solid 1px ${props => props.theme.cellBorder};\r\n`\r\n\r\ntype Iprops = {\r\n    cellData: cellContent\r\n}\r\n\r\nconst Cell = ({ cellData }: Iprops ) => {\r\n    const toggleCell = useContext(ToggleCellState)\r\n    const theme = useContext(CurrentTheme)\r\n\r\n    const handleClick = () => {\r\n        toggleCell(cellData.column, cellData.row)\r\n    }\r\n\r\n    return (\r\n        <StyledCell\r\n            {...cellData}\r\n            onClick={handleClick}\r\n            theme={theme}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Cell\r\n","import React, { useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport { CurrentTheme } from '../../context/theme'\r\nimport { cellContent } from '../../types/cells'\r\nimport { IthemeProp } from '../../types/styles'\r\nimport { H1 } from '@blueprintjs/core'\r\nimport Cell from '../Cell'\r\n\r\nconst Container = styled.div<IthemeProp>`\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    overflow: scroll;\r\n    height: 100%;\r\n    width: 100%;\r\n    justify-content: center;\r\n\r\n    &::-webkit-scrollbar {\r\n        background-color: ${props => props.theme.scrollBarBg};\r\n        width: 10px;\r\n        height: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        background-color: ${props => props.theme.scrollBarThumb};\r\n    }\r\n`\r\nconst Row = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    margin: 0;\r\n`\r\n\r\ninterface Iprops {\r\n    rows: cellContent[][] | undefined\r\n}\r\n\r\nconst CellGrid = ({ rows }: Iprops) => {\r\n    const theme = useContext(CurrentTheme)\r\n\r\n    return (\r\n        <Container theme={theme}>\r\n            { (rows?.length && rows[0].length) ?\r\n                    ( rows.map((row, index) => (\r\n                        <Row key={`row_${index}`}>\r\n                            { row.map( cell => (\r\n                                <Cell\r\n                                    key={`cell_${cell.row}_${cell.column}`}\r\n                                    cellData={cell}\r\n\r\n                                />\r\n                            ))}\r\n                        </Row>\r\n                    )\r\n                ))\r\n                :\r\n                <H1>Not enough cells for me to show 😢</H1>\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CellGrid\r\n","import { boardData } from '../../types/cells'\r\n\r\nexport const aliveNextCycle = (board: boardData, row: number, col: number): boolean => {\r\n    const ROWS = board.length;\r\n    const COLS = board[0].length;\r\n    const current = board[row][col]\r\n\r\n    const UP = row - 1\r\n    const DOWN = row + 1\r\n    const LEFT = col - 1\r\n    const RIGHT = col + 1\r\n\r\n    const HAS_RIGHT = RIGHT < COLS\r\n    const HAS_DOWN = DOWN < ROWS\r\n    const HAS_UP = UP >= 0\r\n    const HAS_LEFT = LEFT >= 0\r\n\r\n    const top_left = (HAS_LEFT && HAS_UP) ? Number(board[UP][LEFT].alive) : 0;\r\n    const top_center = HAS_UP ? Number(board[UP][col].alive) : 0;\r\n    const top_right = (HAS_RIGHT && HAS_UP) ? Number(board[UP][RIGHT].alive) : 0;\r\n    const center_left = HAS_LEFT ? Number(board[row][LEFT].alive) : 0;\r\n    const center_right = HAS_RIGHT ? Number(board[row][RIGHT].alive) : 0;\r\n    const bottom_left = (HAS_LEFT && HAS_DOWN) ? Number(board[DOWN][LEFT].alive) : 0;\r\n    const bottom_center = HAS_DOWN ? Number(board[DOWN][col].alive) : 0;\r\n    const bottom_right = (HAS_DOWN && HAS_RIGHT) ? Number(board[DOWN][RIGHT].alive) : 0;\r\n\r\n    const alive_neighbors = (top_left + top_center + top_right + center_left + center_right + bottom_left + bottom_center + bottom_right)\r\n    return (alive_neighbors === 3) || (current.alive && alive_neighbors === 2)\r\n}\r\n\r\nexport const nextCycle = (board: boardData) : boardData => {\r\n    const copied_data = deep_copy(board) // copy the board\r\n    let i;\r\n    let j;\r\n\r\n    const rows = board.length;\r\n    const cols = board[0].length;\r\n    let new_state\r\n    let current_cell\r\n\r\n    for (i = 0; i < rows; i++) {\r\n        for (j = 0; j < cols; j++) {\r\n            new_state = aliveNextCycle(board, i, j)\r\n            current_cell = copied_data[i][j]\r\n            current_cell.alive = new_state\r\n\r\n            if (new_state) {\r\n                current_cell.age += 1\r\n            }\r\n            else {\r\n                current_cell.age = 0\r\n            }\r\n        }\r\n    }\r\n    return copied_data\r\n}\r\n\r\nexport const deep_copy = (to_copy: any): any => {\r\n    return JSON.parse(JSON.stringify(to_copy))\r\n}\r\n\r\n\r\nconst heartPattern: number[][] = [\r\n    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0],\r\n    [0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0],\r\n    [0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0],\r\n    [0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0],\r\n    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0],\r\n    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n    [0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n    [0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n    [0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,1],\r\n    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n    [0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0],\r\n    [0,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0],\r\n    [0,0,0,0,1,0,0,0,0,1,0,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0],\r\n    [0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0],\r\n    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0],\r\n    [0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],\r\n    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0],\r\n    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0],\r\n    [1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0]\r\n]\r\n\r\n\r\n\r\nexport const createBoard = (rows: number, cols: number, random: boolean, heart=false): boardData  => {\r\n    const array = []\r\n    let row;\r\n    let is_alive\r\n\r\n    for (let i = 0; i < rows; i++) {\r\n        row = []\r\n        for (let j = 0; j < cols; j++) {\r\n            if (random)\r\n                is_alive = !!(Math.round(Math.random()))\r\n            else if (heart)\r\n                is_alive = !!(heartPattern[i][j])\r\n            else\r\n                is_alive = false;\r\n\r\n\r\n            row.push({\r\n                alive: is_alive,\r\n                age: 0,\r\n                row: i,\r\n                column: j\r\n            })\r\n        }\r\n        array.push(row)\r\n    }\r\n    return array\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport Sidebar from '../../components/Sidebar'\r\nimport CellGrid from '../../components/CellGrid'\r\nimport { numInputCallback, SetNumValue } from '../../types/inputs'\r\nimport { boardData } from '../../types/cells'\r\nimport { ToggleCellState } from '../../context/game'\r\nimport { useInterval } from 'react-use';\r\nimport { CurrentTheme } from '../../context/theme'\r\nimport { IthemeProp } from '../../types/styles'\r\nimport { nextCycle, deep_copy, createBoard } from './gameFunctions'\r\n\r\nconst PageContainer = styled.div<IthemeProp>`\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: ${props => props.theme.background};\r\n    color: ${props => props.theme.text};\r\n    display: flex;\r\n    flex-direction: row;\r\n`\r\nconst SideContainer = styled.div`\r\n    width: 270px;\r\n    z-index: 1;\r\n`\r\nconst MainContainer = styled.div`\r\n    width: calc(100% - 270px);\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`\r\n\r\ninterface Iprops {\r\n    readonly isDark: boolean,\r\n    toggleTheme: () => void,\r\n}\r\n\r\nconst Game = ({ isDark, toggleTheme }: Iprops) => {\r\n\r\n    const [colCount, setColCount] = useState(40)\r\n    const [rowCount, setRowCount] = useState(30)\r\n    const [content, setContent] = useState<boardData>()\r\n    const [speed, setSpeed] = useState(10)\r\n    const [isPlaying, setIsPlaying] = useState(false)\r\n    const [iterationCount, setIterationCount] = useState(0)\r\n    const theme = useContext(CurrentTheme)\r\n\r\n    const handleColInput: numInputCallback = (valueAsNumber, valueAsString, innputElement) => {\r\n        setColCount(valueAsNumber)\r\n    }\r\n    const handleRowInput: numInputCallback = (valueAsNumber, valueAsString, innputElement) => {\r\n        setRowCount(valueAsNumber)\r\n    }\r\n    const handleSpeed: SetNumValue = (value) => {\r\n        setSpeed(value)\r\n    }\r\n\r\n    const toggleState = (col: number, row: number) : void => {\r\n        if (Array.isArray(content)) {\r\n            console.log(`Toggling cell: [${row}][${col}]`)\r\n            const copiedContent = deep_copy(content)\r\n\r\n            copiedContent[row][col].alive = !copiedContent[row][col].alive\r\n            setContent(copiedContent)\r\n        }\r\n    }\r\n\r\n    const iterateOnce = () => {\r\n        if (Array.isArray(content)) {\r\n            setContent(nextCycle(content))\r\n            setIterationCount(prev => prev + 1)\r\n        }\r\n    }\r\n\r\n    const initializeBoard = (rows: number, cols: number, random=false, heart=false) => {\r\n        setContent(createBoard(rows, cols, random, heart))\r\n        setIterationCount(0)\r\n    }\r\n\r\n    const resetBoard = (random=false, heart=false) => {\r\n        initializeBoard(rowCount, colCount, random, heart)\r\n    }\r\n\r\n    const togglePlaying = () => {\r\n        setIsPlaying(old => !old)\r\n    }\r\n\r\n    useEffect(() => {\r\n        initializeBoard(rowCount, colCount)\r\n    }, [rowCount, colCount])\r\n\r\n    useInterval(() => {\r\n        iterateOnce()\r\n    }, isPlaying ? (1000 / speed) : null)\r\n\r\n    return (\r\n        <ToggleCellState.Provider value={toggleState} >\r\n\r\n            <PageContainer theme={theme}>\r\n                <SideContainer>\r\n                    <Sidebar\r\n                        rows={rowCount}\r\n                        cols={colCount}\r\n                        setRows={handleRowInput}\r\n                        setCols={handleColInput}\r\n                        iterateOnce={iterateOnce}\r\n                        speed={speed}\r\n                        setSpeed={handleSpeed}\r\n                        isPlaying={isPlaying}\r\n                        togglePlaying={togglePlaying}\r\n                        resetBoard={resetBoard}\r\n                        iterationCount={iterationCount}\r\n                        isDark={isDark}\r\n                        toggleTheme={toggleTheme}\r\n                    />\r\n                </SideContainer>\r\n                <MainContainer>\r\n                    <CellGrid\r\n                        rows={content}\r\n                    />\r\n                </MainContainer>\r\n            </PageContainer>\r\n        </ToggleCellState.Provider>\r\n    )\r\n}\r\n\r\nexport default Game\r\n","import React, { useState } from 'react';\nimport { dark, light } from './styles/colors'\nimport { CurrentTheme } from './context/theme'\nimport Game from './pages/Game'\nimport styled from 'styled-components'\nimport { FocusStyleManager } from \"@blueprintjs/core\";\n\nFocusStyleManager.onlyShowFocusOnTabs();\n\nconst Page = styled.div`\n  height: 100vh;\n  width: 100vw;\n`\n\nfunction App() {\n  const [isDark, setIsDark] = useState(true)\n\n  const toggleTheme = () => {\n    setIsDark(prev => !prev)\n  }\n\n  return (\n    <CurrentTheme.Provider value={isDark ? dark : light}>\n      <Page className={`.bp3-ui-text ${isDark ? 'bp3-dark' : ''}`}>\n        <Game isDark={isDark} toggleTheme={toggleTheme} />\n      </Page>\n    </CurrentTheme.Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\nimport \"@blueprintjs/popover2/lib/css/blueprint-popover2.css\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}