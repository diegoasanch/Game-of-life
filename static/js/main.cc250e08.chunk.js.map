{"version":3,"sources":["styles/colors.ts","context/theme.ts","components/SizeInput/SizeInput.tsx","components/SpeedInput/SpeedInput.tsx","components/Sidebar/Sidebar.tsx","context/game.ts","components/Cell/Cell.tsx","components/CellGrid/CellGrid.tsx","pages/Game/gameFunctions.ts","components/BoardMenu/BoardMenu.tsx","pages/Game/Game.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["dark","background","text","sidebar","cellBorder","cellAlive","cellDead","header","scrollBarBg","scrollBarThumb","light","CurrentTheme","createContext","SizeInput","value","maxValue","placeholder","handleInput","allowNumericCharactersOnly","min","max","onValueChange","fill","SpeedInput","setValue","onChange","labelStepSize","Container","styled","div","props","theme","Stats","footer","Count","span","StyledHeader","H1","HeaderContainer","StyledDivider","Divider","Settings","StyledSwitch","Switch","SectionHeader","H3","InlineIcon","Icon","TooltipContent","Shoutout","H6","SizeInputRow","HeaderTooltip","className","packageJson","version","icon","Sidebar","rows","cols","setRows","setCols","iterateOnce","speed","setSpeed","isPlaying","togglePlaying","resetBoard","iterationCount","isDark","toggleTheme","highlightNew","toggleHighlightNew","useContext","content","position","Position","RIGHT","intent","alignIndicator","Alignment","checked","innerLabel","innerLabelChecked","large","label","TOP","onClick","rightIcon","event","disabled","href","target","rel","ToggleCellState","col","row","console","log","StyledCell","alive","age","Cell","cellData","toggleCell","column","Row","CellGrid","length","map","index","cell","aliveNextCycle","board","ROWS","COLS","current","UP","DOWN","LEFT","HAS_RIGHT","HAS_DOWN","HAS_UP","HAS_LEFT","alive_neighbors","Number","deep_copy","to_copy","JSON","parse","stringify","heartPattern","createBoard","random","is_alive","heart","array","i","j","Math","round","push","BoardMenu","labelElement","PageContainer","SideContainer","MainContainer","ResizedContextMenu","ContextMenu2","Game","useState","colCount","setColCount","rowCount","setRowCount","setContent","setIsPlaying","setIterationCount","setHighlightNew","Array","isArray","new_state","current_cell","copied_data","nextCycle","prev","initializeBoard","old","useEffect","useInterval","hotkeys","useMemo","combo","global","onKeyDown","useHotkeys","handleKeyDown","handleKeyUp","onKeyUp","Provider","copiedContent","valueAsNumber","valueAsString","innputElement","FocusStyleManager","onlyShowFocusOnTabs","Page","App","useLocalStorage","setIsDark","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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,EAAE,EAAE,EAAE,GAC/E,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAC/E,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAC/E,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAC/E,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAC/E,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAC/E,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAC/E,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAC/E,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAC/E,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAC/E,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAC/E,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAC/E,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAC/E,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAC/E,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAC/E,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAC/E,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAC/E,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAC/E,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAC/E,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAC/E,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAC/E,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAC/E,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAC/E,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAC/E,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,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","file":"static/js/main.cc250e08.chunk.js","sourcesContent":[" import { Itheme } from '../types/styles'\r\n\r\nexport const dark: Itheme = {\r\n    background: '#2F3437',\r\n    text: '#EBEBEB',\r\n    sidebar: '#151515',\r\n    cellBorder: '#000000',\r\n    cellAlive: '#0E0F1E',\r\n    cellDead: '#586268',\r\n    header: '#19A6FF',\r\n    scrollBarBg: '#2F3437',\r\n    scrollBarThumb: '#151515',\r\n}\r\nexport const light: Itheme = {\r\n    background: '#EBEBEB',\r\n    text: '#37352F',\r\n    sidebar: '#FFFFFF',\r\n    cellBorder: '#343434',\r\n    cellAlive: '#0E0F10',\r\n    cellDead: '#EEEEEE',\r\n    header: '#19A6FF',\r\n    scrollBarBg: '#EBEBEB',\r\n    scrollBarThumb: '#888',\r\n}\r\n","import { createContext } from 'react'\r\nimport { dark } from '../styles/colors'\r\n\r\nexport const CurrentTheme = createContext(dark)\r\n","import React from 'react'\r\nimport {  NumericInput } from \"@blueprintjs/core\";\r\nimport { numInputCallback } from '../../types/inputs'\r\n\r\ninterface Iprops {\r\n    value: number,\r\n    maxValue: number | undefined,\r\n    placeholder: string,\r\n    handleInput: numInputCallback,\r\n}\r\n\r\nconst SizeInput = ({ value, maxValue, placeholder, handleInput }: Iprops) => {\r\n\r\n    return (\r\n        <NumericInput\r\n            allowNumericCharactersOnly={false}\r\n            min={0}\r\n            max={maxValue}\r\n            onValueChange={handleInput}\r\n            placeholder={placeholder}\r\n            value={value}\r\n            fill\r\n        />\r\n    )\r\n}\r\n\r\nexport default SizeInput\r\n","import React from 'react'\r\nimport { Slider } from \"@blueprintjs/core\";\r\nimport { SetNumValue } from '../../types/inputs'\r\n\r\ninterface Iprops {\r\n    value: number,\r\n    setValue: SetNumValue,\r\n}\r\n\r\n\r\nconst SpeedInput = ({ value, setValue }: Iprops) => {\r\n    return (\r\n        <Slider\r\n            value={value}\r\n            onChange={setValue}\r\n            max={30}\r\n            labelStepSize={4}\r\n            min={1}\r\n        />\r\n    )\r\n}\r\n\r\nexport default SpeedInput\r\n","import React, { useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport { dark } from '../../styles/colors'\r\nimport SizeInput from '../SizeInput'\r\nimport { Label, Button, ButtonGroup, Position, H1, H3, H4, Divider, Switch, Alignment, Icon, H6 } from \"@blueprintjs/core\";\r\nimport { Tooltip2 } from \"@blueprintjs/popover2\";\r\nimport { numInputCallback, SetNumValue } from '../../types/inputs'\r\nimport SpeedInput from '../SpeedInput'\r\nimport { CurrentTheme } from '../../context/theme'\r\nimport { IthemeProp } from '../../types/styles'\r\nimport packageJson from '../../../package.json';\r\n\r\nconst Container = styled.div<IthemeProp>`\r\n    position: relative;\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: ${props => props.theme.sidebar};\r\n    padding: 8px;\r\n    align-items: center;\r\n    justify-content: stretch;\r\n`\r\nconst Stats = styled.footer<IthemeProp>`\r\n    position: absolute;\r\n    bottom: 5px;\r\n    left: 10px;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    justify-self: end;\r\n    margin-top: 10px;\r\n    width: 90%;\r\n    height: 5em;\r\n\r\n    background-color: ${props => props.theme.sidebar};\r\n    z-index: 34;\r\n\r\n    .divider {\r\n        margin-bottom: 10px;\r\n    }\r\n`\r\n\r\nconst Count = styled.span`\r\n    color: ${dark.header};\r\n`\r\nconst StyledHeader = styled(H1)`\r\n    font-size: 4em !important;\r\n    line-height: .9em !important;\r\n    font-weight: bold;\r\n    align-self: flex-start;\r\n`\r\nconst HeaderContainer = styled.header`\r\n    position: relative;\r\n    width: 100%;\r\n`\r\nconst StyledDivider = styled(Divider)`\r\n    width: 100%;\r\n`\r\nconst Settings = styled.div<IthemeProp>`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    overflow-y: auto;\r\n    width: 100%;\r\n    margin-bottom: 4.5em;\r\n    /* margin-right: 5px; */\r\n\r\n    > * {\r\n        margin: .5em 0;\r\n    }\r\n    &::-webkit-scrollbar {\r\n        /* display: none; */\r\n        background-color: ${props => props.theme.scrollBarBg};\r\n        width: 5px;\r\n        height: 5px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        background-color: ${props => props.theme.scrollBarThumb};\r\n    }\r\n    /* &:hover {\r\n        margin-right: 0;\r\n        &::-webkit-scrollbar {\r\n            display: contents;\r\n        }\r\n    } */\r\n`\r\nconst StyledSwitch = styled(Switch)`\r\n    position: absolute;\r\n    bottom: 0;\r\n    right: 0;\r\n`\r\nconst SectionHeader = styled(H3)`\r\n    align-self: flex-flex-start;\r\n`\r\nconst InlineIcon = styled(Icon)`\r\n    display: inline-block;\r\n    vertical-align: super;\r\n    margin-left: .2em;\r\n`\r\nconst TooltipContent = styled.div`\r\n    width: 40vw;\r\n    max-width: 1000px;\r\n    min-width: 500px;\r\n    padding: 1em;\r\n`\r\nconst Shoutout = styled(H6)`\r\n    font-size: .9em !important;\r\n\r\n    a &:not(:hover) {\r\n        color: inherit;\r\n    }\r\n`\r\nconst SizeInputRow = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    width: 100%;\r\n    justify-items: center;\r\n    align-items: center;\r\n\r\n    > * {\r\n        padding: 0 5%;\r\n    }\r\n`\r\n\r\ninterface Iprops {\r\n    rows: number,\r\n    cols: number,\r\n    setRows: numInputCallback,\r\n    setCols: numInputCallback,\r\n    speed: number,\r\n    setSpeed: SetNumValue,\r\n    isPlaying: boolean,\r\n    iterationCount: number,\r\n    iterateOnce: () => void,\r\n    resetBoard: (random: boolean | undefined, heart: boolean | undefined) => void,\r\n    togglePlaying: () => void,\r\n    readonly isDark: boolean,\r\n    toggleTheme: () => void,\r\n    readonly highlightNew: boolean,\r\n    toggleHighlightNew: () => void,\r\n}\r\n\r\nconst HeaderTooltip = (\r\n    <TooltipContent>\r\n        <h1>Conway's Game of Life <span className=\"bp3-text-muted\"> - v{packageJson.version}</span></h1>\r\n        <p>\r\n            &emsp; Is a <strong>cellular automaton</strong> devised by the\r\n            British mathematician John\r\n            Horton Conway in 1970. It is a zero-player game, meaning that its\r\n            evolution is determined by its initial state, requiring no further\r\n            input.<br/>\r\n            &emsp; One interacts with the Game of Life by creating an initial\r\n            configuration and observing how it evolves.\r\n\r\n        </p>\r\n        <h2>How to play?</h2>\r\n        <p>\r\n            &emsp; Click on a cell to change its state. Change as many cells as you want and\r\n            press <strong><Icon icon=\"play\"/> Play</strong>!\r\n            <br/>\r\n            &emsp; Alternatively, click the <strong><Icon icon=\"step-forward\"/> Step by step </strong>\r\n            button to evolve the board one cycle at a time.\r\n        </p>\r\n        <h2>Rules</h2>\r\n        <ul>\r\n            <li>Any live cell with fewer than two live neighbours dies, as if by underpopulation.</li>\r\n            <li>Any live cell with two or three live neighbours lives on to the next generation.</li>\r\n            <li>Any live cell with more than three live neighbours dies, as if by overpopulation.</li>\r\n            <li>Any dead cell with exactly three live neighbours becomes a live cell, as if by reproduction.</li>\r\n        </ul>\r\n    </TooltipContent>\r\n)\r\n\r\nconst Sidebar = ({\r\n    rows,\r\n    cols,\r\n    setRows,\r\n    setCols,\r\n    iterateOnce,\r\n    speed,\r\n    setSpeed,\r\n    isPlaying,\r\n    togglePlaying,\r\n    resetBoard,\r\n    iterationCount,\r\n    isDark,\r\n    toggleTheme,\r\n    highlightNew,\r\n    toggleHighlightNew,\r\n}: Iprops) => {\r\n\r\n    const theme = useContext(CurrentTheme)\r\n\r\n    const handleClick = (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\r\n        iterateOnce()\r\n    }\r\n\r\n\r\n    return (\r\n        <Container theme={theme}>\r\n\r\n            <HeaderContainer>\r\n                <Tooltip2 content={HeaderTooltip} position={Position.RIGHT}>\r\n                    <StyledHeader>\r\n                        Game <br/>\r\n                        of <br/>\r\n                        Life\r\n                        <InlineIcon icon=\"info-sign\" intent=\"primary\"/>\r\n                    </StyledHeader>\r\n                </Tooltip2>\r\n                <StyledSwitch\r\n                    alignIndicator={Alignment.RIGHT}\r\n                    checked={isDark}\r\n                    onChange={toggleTheme}\r\n                    innerLabel=\"🌞\"\r\n                    innerLabelChecked=\"🌚\"\r\n                    large\r\n                />\r\n            </HeaderContainer>\r\n\r\n            <StyledDivider />\r\n\r\n            <Settings theme={theme}>\r\n\r\n                <SectionHeader>Settings</SectionHeader>\r\n\r\n                <Switch\r\n                    alignIndicator={Alignment.RIGHT}\r\n                    checked={highlightNew}\r\n                    onChange={toggleHighlightNew}\r\n                    label=\"Highlight new cells\"\r\n                    // large\r\n                />\r\n                <SizeInputRow>\r\n                    <Label>\r\n                        Rows\r\n                        <SizeInput\r\n                            value={rows}\r\n                            maxValue={250}\r\n                            placeholder=\"Row count\"\r\n                            handleInput={setRows}\r\n                        />\r\n                    </Label>\r\n                    <Label>\r\n                        Columns\r\n                        <SizeInput\r\n                            value={cols}\r\n                            maxValue={250}\r\n                            placeholder=\"Column count\"\r\n                            handleInput={setCols}\r\n                        />\r\n                    </Label>\r\n                </SizeInputRow>\r\n                <Label>\r\n                    Iteration Speed\r\n                    <span className=\"bp3-text-muted\"> (Hz)</span>\r\n                    <SpeedInput\r\n                        value={speed}\r\n                        setValue={setSpeed}\r\n                    />\r\n                </Label>\r\n\r\n                <ButtonGroup large>\r\n                    <Tooltip2 content={`${isPlaying ? 'Stop': 'Start'} iterating`} position={Position.TOP}>\r\n                        <Button\r\n                            text={isPlaying ? \"Pause\" : \"Play\"}\r\n                            icon={isPlaying ? \"pause\" : \"play\"}\r\n                            intent=\"primary\"\r\n                            onClick={togglePlaying}\r\n                        />\r\n                    </Tooltip2>\r\n                    <Tooltip2 content=\"Step-by-step\" position={Position.TOP}>\r\n                        <Button\r\n                            rightIcon=\"step-forward\"\r\n                            onClick={handleClick}\r\n                            disabled={isPlaying}\r\n                        />\r\n                    </Tooltip2>\r\n\r\n                </ButtonGroup>\r\n                <ButtonGroup>\r\n                    <Tooltip2 content=\"Reset board\" position={Position.TOP}>\r\n                        <Button\r\n                            onClick={() => resetBoard(false, true)}\r\n                            icon=\"reset\"\r\n                            intent=\"danger\"\r\n                        />\r\n                    </Tooltip2>\r\n                    <Tooltip2 content=\"Clear board\" position={Position.TOP}>\r\n                        <Button\r\n                            onClick={() => resetBoard(false, false)}\r\n                            icon=\"eraser\"\r\n                        />\r\n                    </Tooltip2>\r\n                    <Tooltip2 content=\"Randomize cells\" position={Position.TOP}>\r\n                        <Button\r\n                            text=\"Random\"\r\n                            onClick={() => resetBoard(true, false)}\r\n                            icon=\"random\"\r\n                        />\r\n                    </Tooltip2>\r\n                </ButtonGroup>\r\n            </Settings>\r\n\r\n\r\n            <Stats theme={theme}>\r\n                <StyledDivider className=\"divider\" />\r\n                {/* <SectionHeader>Info</SectionHeader> */}\r\n\r\n                <H4>Iteration count: <Count>{iterationCount}</Count></H4>\r\n                <Shoutout className=\"bp3-text-muted\">\r\n                    Made with 💖 by&nbsp;\r\n                    <a href=\"https://github.com/diegoasanch\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        Diego.\r\n                    </a>\r\n                </Shoutout>\r\n\r\n            </Stats>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import { createContext } from 'react'\r\n\r\nexport const ToggleCellState = createContext((col: number, row: number) => {console.log('Not yet configured')})\r\n","import React, { useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport { cellContent } from '../../types/cells'\r\nimport { ToggleCellState } from '../../context/game'\r\nimport { CurrentTheme } from '../../context/theme'\r\nimport { IthemeProp, ICellType } from '../../types/styles'\r\n\r\nconst StyledCell = styled.div<cellContent & IthemeProp & ICellType>`\r\n    height: 20px;\r\n    width: 20px;\r\n    background-color: ${props => (\r\n        props.alive ? ((props.age !== 1 || !props.highlightNew) ? props.theme.cellAlive : props.theme.header) : props.theme.cellDead\r\n    )};\r\n    border: solid 1px ${props => props.theme.cellBorder};\r\n`\r\n\r\ntype Iprops = {\r\n    cellData: cellContent,\r\n    highlightNew: boolean,\r\n}\r\n\r\nconst Cell = ({ cellData, highlightNew }: Iprops ) => {\r\n    const toggleCell = useContext(ToggleCellState)\r\n    const theme = useContext(CurrentTheme)\r\n\r\n    const handleClick = () => {\r\n        toggleCell(cellData.column, cellData.row)\r\n    }\r\n\r\n    return (\r\n        <StyledCell\r\n            {...cellData}\r\n            onClick={handleClick}\r\n            theme={theme}\r\n            highlightNew={highlightNew}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Cell\r\n","import React, { useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport { CurrentTheme } from '../../context/theme'\r\nimport { cellContent } from '../../types/cells'\r\nimport { IthemeProp } from '../../types/styles'\r\nimport { H1 } from '@blueprintjs/core'\r\nimport Cell from '../Cell'\r\n\r\nconst Container = styled.div<IthemeProp>`\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    overflow: scroll;\r\n    height: 100%;\r\n    width: 100%;\r\n    justify-content: center;\r\n\r\n    &::-webkit-scrollbar {\r\n        background-color: ${props => props.theme.scrollBarBg};\r\n        width: 10px;\r\n        height: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        background-color: ${props => props.theme.scrollBarThumb};\r\n    }\r\n`\r\nconst Row = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    margin: 0;\r\n`\r\n\r\ninterface Iprops {\r\n    rows: cellContent[][] | undefined,\r\n    highlightNew: boolean,\r\n}\r\n\r\nconst CellGrid = ({ rows, highlightNew }: Iprops) => {\r\n    const theme = useContext(CurrentTheme)\r\n\r\n    return (\r\n        <Container theme={theme}>\r\n            { (rows?.length && rows[0].length) ?\r\n                    ( rows.map((row, index) => (\r\n                        <Row key={`row_${index}`}>\r\n                            { row.map( cell => (\r\n                                <Cell\r\n                                    key={`cell_${cell.row}_${cell.column}`}\r\n                                    cellData={cell}\r\n                                    highlightNew={highlightNew}\r\n                                />\r\n                            ))}\r\n                        </Row>\r\n                    )\r\n                ))\r\n                :\r\n                <H1>Not enough cells for me to show 😢</H1>\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CellGrid\r\n","import { boardData } from '../../types/cells'\r\n\r\nexport const aliveNextCycle = (board: boardData, row: number, col: number): boolean => {\r\n    const ROWS = board.length;\r\n    const COLS = board[0].length;\r\n    const current = board[row][col]\r\n\r\n    const UP = row - 1\r\n    const DOWN = row + 1\r\n    const LEFT = col - 1\r\n    const RIGHT = col + 1\r\n\r\n    const HAS_RIGHT = RIGHT < COLS\r\n    const HAS_DOWN = DOWN < ROWS\r\n    const HAS_UP = UP >= 0\r\n    const HAS_LEFT = LEFT >= 0\r\n\r\n    const top_left = (HAS_LEFT && HAS_UP) ? Number(board[UP][LEFT].alive) : 0;\r\n    const top_center = HAS_UP ? Number(board[UP][col].alive) : 0;\r\n    const top_right = (HAS_RIGHT && HAS_UP) ? Number(board[UP][RIGHT].alive) : 0;\r\n    const center_left = HAS_LEFT ? Number(board[row][LEFT].alive) : 0;\r\n    const center_right = HAS_RIGHT ? Number(board[row][RIGHT].alive) : 0;\r\n    const bottom_left = (HAS_LEFT && HAS_DOWN) ? Number(board[DOWN][LEFT].alive) : 0;\r\n    const bottom_center = HAS_DOWN ? Number(board[DOWN][col].alive) : 0;\r\n    const bottom_right = (HAS_DOWN && HAS_RIGHT) ? Number(board[DOWN][RIGHT].alive) : 0;\r\n\r\n    const alive_neighbors = (top_left + top_center + top_right + center_left + center_right + bottom_left + bottom_center + bottom_right)\r\n    return (alive_neighbors === 3) || (current.alive && alive_neighbors === 2)\r\n}\r\n\r\nexport const nextCycle = (board: boardData) : boardData => {\r\n    const copied_data = deep_copy(board) // copy the board\r\n    let i;\r\n    let j;\r\n\r\n    const rows = board.length;\r\n    const cols = board[0].length;\r\n    let new_state\r\n    let current_cell\r\n\r\n    for (i = 0; i < rows; i++) {\r\n        for (j = 0; j < cols; j++) {\r\n            new_state = aliveNextCycle(board, i, j)\r\n            current_cell = copied_data[i][j]\r\n            current_cell.alive = new_state\r\n\r\n            if (new_state) {\r\n                current_cell.age += 1\r\n            }\r\n            else {\r\n                current_cell.age = 0\r\n            }\r\n        }\r\n    }\r\n    return copied_data\r\n}\r\n\r\nexport const deep_copy = (to_copy: any): any => {\r\n    return JSON.parse(JSON.stringify(to_copy))\r\n}\r\n\r\n\r\nconst heartPattern: number[][] = [\r\n    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0],\r\n    [0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0],\r\n    [0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0],\r\n    [0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0],\r\n    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0],\r\n    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n    [0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n    [0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n    [0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,1],\r\n    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n    [0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0],\r\n    [0,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0],\r\n    [0,0,0,0,1,0,0,0,0,1,0,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0],\r\n    [0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0],\r\n    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0],\r\n    [0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],\r\n    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0],\r\n    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\r\n    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0],\r\n    [1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0]\r\n]\r\n\r\n\r\n\r\nexport const createBoard = (rows: number, cols: number, random: boolean, heart=false): boardData  => {\r\n    const array = []\r\n    let row;\r\n    let is_alive\r\n\r\n    for (let i = 0; i < rows; i++) {\r\n        row = []\r\n        for (let j = 0; j < cols; j++) {\r\n            if (random)\r\n                is_alive = !!(Math.round(Math.random()))\r\n            else if (heart)\r\n                is_alive = !!(heartPattern[i][j])\r\n            else\r\n                is_alive = false;\r\n\r\n\r\n            row.push({\r\n                alive: is_alive,\r\n                age: 0,\r\n                row: i,\r\n                column: j\r\n            })\r\n        }\r\n        array.push(row)\r\n    }\r\n    return array\r\n}\r\n","import React from 'react'\r\nimport { Menu, MenuItem, MenuDivider, Icon } from \"@blueprintjs/core\";\r\n\r\ninterface Iprops {\r\n    iterateOnce: () => void,\r\n    isPlaying: boolean,\r\n    togglePlaying: () => void,\r\n    resetBoard: (random: boolean | undefined, heart: boolean | undefined) => void,\r\n}\r\n\r\nconst BoardMenu = ({\r\n    iterateOnce,\r\n    isPlaying,\r\n    togglePlaying,\r\n    resetBoard,\r\n}: Iprops) => {\r\n    return (\r\n        <Menu>\r\n            <MenuItem\r\n                text={isPlaying ? \"Pause\" : \"Play\"}\r\n                icon={isPlaying ? \"pause\" : \"play\"}\r\n                onClick={togglePlaying}\r\n                intent=\"primary\"\r\n                labelElement={\r\n                    <span className=\"bp3-text-muted\">\r\n                        P\r\n                    </span>\r\n                }\r\n            />\r\n            <MenuItem\r\n                text=\"Iterate once\"\r\n                icon=\"step-forward\"\r\n                onClick={iterateOnce}\r\n                disabled={isPlaying}\r\n                labelElement={\r\n                    <span className=\"bp3-text-muted\">\r\n                        <Icon icon=\"arrow-right\" />\r\n                    </span>\r\n                }\r\n            />\r\n            <MenuDivider />\r\n            <MenuItem\r\n                text=\"Randomize cells\"\r\n                icon=\"random\"\r\n                onClick={() => resetBoard(true, false)}\r\n                labelElement={\r\n                    <span className=\"bp3-text-muted\">\r\n                        <Icon icon=\"key-shift\" />N\r\n                    </span>\r\n                }\r\n            />\r\n            <MenuItem\r\n                text=\"Clear board\"\r\n                icon=\"eraser\"\r\n                onClick={() => resetBoard(false, false)}\r\n                labelElement={\r\n                    <span className=\"bp3-text-muted\">\r\n                        <Icon icon=\"key-shift\" />C\r\n                    </span>\r\n                }\r\n            />\r\n            <MenuItem\r\n                text=\"Reset board\"\r\n                icon=\"reset\"\r\n                onClick={() => resetBoard(false, true)}\r\n                intent=\"danger\"\r\n                labelElement={\r\n                    <span className=\"bp3-text-muted\">\r\n                        <Icon icon=\"key-shift\" />R\r\n                    </span>\r\n                }\r\n            />\r\n            <MenuDivider />\r\n            <MenuItem\r\n                text=\"View on GitHub\"\r\n                icon=\"code\"\r\n                labelElement={<Icon icon=\"arrow-top-right\" />}\r\n                href=\"https://github.com/diegoasanch/Game-of-life\"\r\n                target=\"_blank\"\r\n            />\r\n        </Menu>\r\n    )\r\n}\r\n\r\nexport default BoardMenu\r\n","import React, { useContext, useEffect, useState, useMemo } from 'react'\r\nimport styled from 'styled-components'\r\nimport Sidebar from '../../components/Sidebar'\r\nimport CellGrid from '../../components/CellGrid'\r\nimport { numInputCallback, SetNumValue } from '../../types/inputs'\r\nimport { boardData } from '../../types/cells'\r\nimport { ToggleCellState } from '../../context/game'\r\nimport { useInterval } from 'react-use';\r\nimport { CurrentTheme } from '../../context/theme'\r\nimport { IthemeProp } from '../../types/styles'\r\nimport { nextCycle, deep_copy, createBoard } from './gameFunctions'\r\nimport { ContextMenu2 } from \"@blueprintjs/popover2\";\r\nimport BoardMenu from '../../components/BoardMenu'\r\nimport { useHotkeys } from \"@blueprintjs/core\";\r\n\r\nconst PageContainer = styled.div<IthemeProp>`\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: ${props => props.theme.background};\r\n    color: ${props => props.theme.text};\r\n    display: flex;\r\n    flex-direction: row;\r\n`\r\nconst SideContainer = styled.div`\r\n    width: 270px;\r\n    z-index: 1;\r\n`\r\nconst MainContainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    height: 100%;\r\n`\r\nconst ResizedContextMenu = styled(ContextMenu2)`\r\n    height: 100vh;\r\n    width: 100vw;\r\n`\r\n\r\ninterface Iprops {\r\n    readonly isDark: boolean,\r\n    toggleTheme: () => void,\r\n}\r\n\r\nconst Game = ({ isDark, toggleTheme }: Iprops) => {\r\n\r\n    const [colCount, setColCount] = useState(40)\r\n    const [rowCount, setRowCount] = useState(30)\r\n    const [content, setContent] = useState<boardData>()\r\n    const [speed, setSpeed] = useState(10)\r\n    const [isPlaying, setIsPlaying] = useState(false)\r\n    const [iterationCount, setIterationCount] = useState(0)\r\n    const [highlightNew, setHighlightNew] = useState(false)\r\n\r\n    const theme = useContext(CurrentTheme)\r\n\r\n    const handleColInput: numInputCallback = (valueAsNumber, valueAsString, innputElement) => {\r\n        setColCount(valueAsNumber)\r\n    }\r\n    const handleRowInput: numInputCallback = (valueAsNumber, valueAsString, innputElement) => {\r\n        setRowCount(valueAsNumber)\r\n    }\r\n    const handleSpeed: SetNumValue = (value) => {\r\n        setSpeed(value)\r\n    }\r\n\r\n    const toggleState = (col: number, row: number) : void => {\r\n        if (Array.isArray(content)) {\r\n            console.log(`Toggling cell: [${row}][${col}]`)\r\n            const copiedContent = deep_copy(content)\r\n\r\n            copiedContent[row][col].alive = !copiedContent[row][col].alive\r\n            setContent(copiedContent)\r\n        }\r\n    }\r\n\r\n    const iterateOnce = () => {\r\n        if (Array.isArray(content)) {\r\n            setContent(nextCycle(content))\r\n            setIterationCount(prev => prev + 1)\r\n        }\r\n    }\r\n\r\n    const initializeBoard = (rows: number, cols: number, random=false, heart=false) => {\r\n        setContent(createBoard(rows, cols, random, heart))\r\n        setIterationCount(0)\r\n    }\r\n\r\n    const resetBoard = (random=false, heart=false) => {\r\n        initializeBoard(rowCount, colCount, random, heart)\r\n    }\r\n\r\n    const togglePlaying = () => {\r\n        setIsPlaying(old => !old)\r\n    }\r\n    const toggleHighlightNew = () => {\r\n        setHighlightNew(old => !old)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        initializeBoard(rowCount, colCount)\r\n    }, [rowCount, colCount])\r\n\r\n    useEffect(() => {\r\n        initializeBoard(rowCount, colCount, false, true)\r\n    // eslint-disable-next-line\r\n    }, [])\r\n\r\n    useInterval(() => {\r\n        iterateOnce()\r\n    }, isPlaying ? (1000 / speed) : null)\r\n\r\n    const hotkeys = useMemo(() => [\r\n        {\r\n            combo: 'p',\r\n            global: true,\r\n            label: \"Play\",\r\n            onKeyDown: togglePlaying\r\n        },\r\n        {\r\n            combo: 'right',\r\n            global: true,\r\n            label: \"Iterate once\",\r\n            onKeyDown: iterateOnce\r\n        },\r\n        {\r\n            combo: 'shift + n',\r\n            global: true,\r\n            label: \"Randomize cells\",\r\n            onKeyDown: () => resetBoard(true, false)\r\n        },\r\n        {\r\n            combo: 'shift + c',\r\n            global: true,\r\n            label: \"Clear board\",\r\n            onKeyDown: () => resetBoard(false, false)\r\n        },\r\n        {\r\n            combo: 'shift + r',\r\n            global: true,\r\n            label: \"Reset Board\",\r\n            onKeyDown: () => resetBoard(false, true)\r\n        },\r\n        {\r\n            combo: 'shift + l',\r\n            global: true,\r\n            label: \"Toggle theme\",\r\n            onKeyDown: toggleTheme\r\n        },\r\n        {\r\n            combo: 'shift + h',\r\n            global: true,\r\n            label: \"Toggle theme\",\r\n            onKeyDown: toggleHighlightNew\r\n        },\r\n    // eslint-disable-next-line\r\n    ], [content, isDark])\r\n\r\n    const { handleKeyDown, handleKeyUp } = useHotkeys(hotkeys)\r\n\r\n    return (\r\n        <div onKeyDown={handleKeyDown} onKeyUp={handleKeyUp}>\r\n            <ToggleCellState.Provider value={toggleState} >\r\n                <ResizedContextMenu content={\r\n                    <BoardMenu\r\n                        iterateOnce={iterateOnce}\r\n                        isPlaying={isPlaying}\r\n                        togglePlaying={togglePlaying}\r\n                        resetBoard={resetBoard}\r\n                        />\r\n                    }\r\n                >\r\n                    <PageContainer theme={theme}>\r\n                        <SideContainer>\r\n                            <Sidebar\r\n                                rows={rowCount}\r\n                                cols={colCount}\r\n                                setRows={handleRowInput}\r\n                                setCols={handleColInput}\r\n                                iterateOnce={iterateOnce}\r\n                                speed={speed}\r\n                                setSpeed={handleSpeed}\r\n                                isPlaying={isPlaying}\r\n                                togglePlaying={togglePlaying}\r\n                                resetBoard={resetBoard}\r\n                                iterationCount={iterationCount}\r\n                                isDark={isDark}\r\n                                toggleTheme={toggleTheme}\r\n                                highlightNew={highlightNew}\r\n                                toggleHighlightNew={toggleHighlightNew}\r\n                            />\r\n                        </SideContainer>\r\n\r\n                            <MainContainer>\r\n                                <CellGrid\r\n                                    rows={content}\r\n                                    highlightNew={highlightNew}\r\n                                />\r\n                        </MainContainer>\r\n                    </PageContainer>\r\n                </ResizedContextMenu>\r\n            </ToggleCellState.Provider>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Game\r\n","import React from 'react';\nimport { dark, light } from './styles/colors'\nimport { CurrentTheme } from './context/theme'\nimport Game from './pages/Game'\nimport styled from 'styled-components'\nimport { FocusStyleManager, HotkeysProvider } from \"@blueprintjs/core\";\nimport { useLocalStorage } from 'react-use'\n\nFocusStyleManager.onlyShowFocusOnTabs();\n\nconst Page = styled.div`\n  height: 100vh;\n  width: 100vw;\n`\n\nfunction App() {\n  const [isDark, setIsDark] = useLocalStorage('isDark', true)\n\n  const toggleTheme = () => {\n    setIsDark(!isDark)\n  }\n\n  return (\n    <HotkeysProvider>\n      <CurrentTheme.Provider value={isDark ? dark : light}>\n        <Page className={`.bp3-ui-text ${isDark ? 'bp3-dark' : ''}`}>\n          <Game isDark={isDark ?? false} toggleTheme={toggleTheme} />\n        </Page>\n      </CurrentTheme.Provider>\n    </HotkeysProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\nimport \"@blueprintjs/popover2/lib/css/blueprint-popover2.css\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}